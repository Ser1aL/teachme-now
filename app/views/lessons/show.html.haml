= content_for :title, t("meta.course_lesson.title", pre_word: @lesson.name )
= content_for :meta_description, t("meta.course_lesson.description", pre_word: @lesson.name)
= content_for :meta_keywords, t("meta.course_lesson.keywords", pre_word: @lesson.name)
- teacher = @lesson.teachers.first

%h1.invisible= t "meta.course_lesson.header", pre_word: @lesson.name

- if @lesson.course
  .course_lesson_panel
    .left
      %span.label
        = t "lesson.is_part_of_course"
      %span.course_name
        = link_to @lesson.course.name, course_path(@lesson.course), class: 'blue_link'
    .right
      %span= link_to t("lesson.go_to_course"), course_path(@lesson.course), class: 'blue_link'
    .delimiter
.single_lesson_wrapper
  .lesson
    .hint
      = link_to t("interests.#{@lesson.interest.name}"), interest_lessons_path(@lesson.interest)
      \/
      = link_to t("sub_interests.#{@lesson.sub_interest.name}"), sub_interest_lessons_path(@lesson.interest, @lesson.sub_interest)
    .title= @lesson.name
    .delim
    .body
      .hint.left_hint= t "course.hint.description"
      .delimiter
      .left
        .description
          = @lesson.description.html_safe
        .delim
        .additional_lesson_info
          .additional_left
            .address_line= t("lesson.address", { city: t("lesson.cities.#{@lesson.city.downcase}"), address_line: @lesson.address_line })
            .start_datetime
              = @lesson.start_datetime.to_formatted_s(:time)
              %span.date
                = "(" + l(@lesson.start_datetime, format: "%d %B %Y") + ")"
            .duration
              = t "lesson_form.hours", count: @lesson.duration / 60
              = t "lesson_form.minutes", count: @lesson.duration % 60
          .additional_right
            - if @lesson.teachers.include?(current_user)
              .buy_pass
                %a{ href: lesson_path(@lesson) }
                  %span
                    %b
                      = @lesson.place_price
                    = t("currency")
            - elsif @lesson.user_already_applied?(current_user)
              .buy_pass.disabled
                %a.disabled
                  %span
                    = t('lesson.already_applied')
            - elsif !@lesson.available?
              .buy_pass.disabled
                %a.disabled
                  %span
                    = t('lesson.no_place')
            - elsif @lesson.passed?
              .buy_pass.disabled
                %a.disabled
                  %span
                    = t('lesson.already_passed')
            - else
              .buy_pass
                %a{ href: get_buy_passes_path(@lesson) }
                  %span
                    %b
                      = @lesson.place_price
                    = t("currency")
            .delimiter
            .places_available
              .counts= "#{@lesson.places_taken} / #{@lesson.capacity}"
              .students= t("lesson.students")
          .delimiter
        .delim
        .buttons
          - if @lesson.teachers.include?(current_user)
            .orange_button
              %a{ href: edit_lesson_path(@lesson) }
                %span
                  = t('lesson.edit_lesson')
          - elsif !@lesson.passed? && @lesson.available? && !@lesson.user_already_applied?(current_user)
            .green_button
              %a{ href: get_buy_passes_path(@lesson) }
                %span
                  = t('lesson.buy_pass')
          .delimiter
          .vk_share{ data: { lesson_name: @lesson.name, button_text: t("vk_share_button.button_text"), common_title: t("vk_share_button.post_title"), url: lesson_url(@lesson) } }
          .delimiter
        .delimiter
      .delimiter
      .teacher_info
        .teacher_left
          - if teacher.image_attachment.try(:image, :medium)
            .avatar
              %a{ href: user_path(teacher) }
                = image_tag teacher.image_attachment.try(:image, :thumb)
          - else
            .avatar.missing
              %a{ href: user_path(teacher) }
                = image_tag 'missing.png'
          .rating
            = teacher.ratings.sum(&:rating)
        .teacher_right
          .name= link_to teacher.full_name, user_path(teacher)
          .tease_description= @lesson.course.try(:tease_description).try(:html_safe) || @lesson.tease_description.html_safe
        .delimiter

  .comments_wrapper
    .comments
      = render @lesson.comments, locals: { lesson: @lesson }
    .comment_form{ class: @lesson.comments.any? ? 'with_top_border' : '' }
      .ajax_loader.invisible
      = form_for @lesson.comments.new do |f|
        = f.hidden_field :lesson_id
        - if current_user.blank?
          = f.text_area :body, placeholder: t('comment.textarea_disabled'), readonly: true
        - else
          = f.text_area :body, placeholder: t('comment.textarea_placeholder')
          .submit_error.invisible= t "comment.body_is_blank"
          .submit.submittable
            %a
              %span= t 'comment.submit_message'
        .delimiter